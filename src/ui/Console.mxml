<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         width="100%"
         height="100%"
         creationComplete="onCreationComplete(event)">

    <fx:Script>
        <![CDATA[
        import com.greensock.TweenLite;

        import mx.collections.ArrayCollection;
        import mx.events.CollectionEvent;
        import mx.events.FlexEvent;

        import ui.renderers.ConsoleItemRenderer;
        import ui.renderers.ConsoleItemRendererWithButton;

        public static var ALERT:String       = "alert";
        public static var INPUT:String       = "input";
        public static var USER_JOINED:String = "userJoined";
        public static var USER_LEFT:String   = "userLeft";
        public static var CONFIG:String      = "config";

        public static var data:ArrayCollection;
        private var locked:Boolean;

        private function onCreationComplete(event:FlexEvent):void
        {
            data              = new ArrayCollection();
            list.dataProvider = data;
            list.dataProvider.addEventListener(CollectionEvent.COLLECTION_CHANGE,
                    onChange);

            locked = true;

            list.scroller.verticalScrollBar.addEventListener(Event.CHANGE, onScroll);
        }

        private function onScroll(event:Event):void
        {
            locked = (list.scroller.verticalScrollBar.value == list.scroller.verticalScrollBar.maximum);
        }

        public static function log(str:String, type:String = null, payload:Object = null):void
        {
            var date:Date = new Date();
            data.addItem({message: str, type: type, payload: payload, time: date.time});
            trace(str);
        }

        private function onChange(event:Event):void
        {
            if (locked)
            {
                // Scroll to the bottom if locked
                list.validateNow();
                TweenLite.killTweensOf(list.scroller.verticalScrollBar);
                TweenLite.to(list.scroller.verticalScrollBar,
                        .4,
                        {value: list.scroller.verticalScrollBar.maximum + 500});
            }
        }

        private function itemRendererFunction(item:Object):IFactory
        {
            if (item.payload && item.payload.copy)
                return new ClassFactory(ConsoleItemRendererWithButton);
            return new ClassFactory(ConsoleItemRenderer);
        }
        ]]>
    </fx:Script>

    <s:List id="list"
            width="100%"
            height="100%"
            itemRendererFunction="itemRendererFunction"
            horizontalScrollPolicy="off"
            borderVisible="false"
            contentBackgroundAlpha="0" />

</s:Group>